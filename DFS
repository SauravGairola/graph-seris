
#include<bits/stdc++.h>
using namespace std;

class Solution {
     void dfs(int node,vector<int>&vis,vector<int>&storedfs,vector<int> adj[]){
           vis[node]=1;
           storedfs.push_back(node);
           for(auto it:adj[node]){
               if(!vis[it]){
                   dfs(it,vis,storedfs,adj);
               }
           }
     }
public:
	vector<int>dfsOfGraph(int V, vector<int> adj[]){
	    vector<int> storedfs; 
	    vector<int> vis(V+1, 0);  
	    for(int i=1;i<=V;i++){
            if(!vis[i]){
                dfs(i,vis,storedfs,adj);
            }
        }
        return storedfs;
	}
};

int main(){
	int t;
	cin >> t;
	
	while(t--){
		int V, E;
    	cin >> V >> E;

    	vector<int> adj[V];

    	for(int i = 0; i < E; i++)
    	{
    		int u, v;
    		cin >> u >> v;
    		adj[u].push_back(v);
            adj[v].push_back(u); 
    	}
      
        Solution obj;
        vector<int>ans=obj.dfsOfGraph(V, adj);
        for(int i=0;i<ans.size();i++){
        	cout<<ans[i]<<" ";
        }
        cout<<endl;
	}
	return 0;
}
